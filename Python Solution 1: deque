class Solution:
    def highestPeak(self, isWater: List[List[int]]) -> List[List[int]]:
        m, n = len(isWater), len(isWater[0])
        ans = [[-1] * n for _ in range(m)] 
        queue = deque()
        
        for row in range(m):
            for col in range(n):
                if isWater[row][col] == 1:
                    ans[row][col] = 0
                    queue.append((row, col))
        
        directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
        
        while queue:
            r, c = queue.popleft()
            for dr, dc in directions:
                nr, nc = r + dr, c + dc
                if 0 <= nr < m and 0 <= nc < n and ans[nr][nc] == -1: 
                    ans[nr][nc] = ans[r][c] + 1
                    queue.append((nr, nc))
        
        return ans
